"use strict";(self.webpackChunkviki=self.webpackChunkviki||[]).push([[561],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(r),f=i,b=d["".concat(c,".").concat(f)]||d[f]||p[f]||o;return r?n.createElement(b,a(a({ref:t},u),{},{components:r})):n.createElement(b,a({ref:t},u))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},181:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var n=r(7462),i=r(3366),o=(r(7294),r(3905)),a=["components"],l={},c="04 Variables",s={unversionedId:"pl/c++/variables",id:"pl/c++/variables",title:"04 Variables",description:"- Each data type has their purpose. However, you don't actually need to use in that purpose.",source:"@site/docs/pl/c++/04-variables.md",sourceDirName:"pl/c++",slug:"/pl/c++/variables",permalink:"/viki/docs/pl/c++/variables",editUrl:"https://github.com/v3ce/viki/edit/docs/docs/environment/index.md/docs/pl/c++/04-variables.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"plSidebar",previous:{title:"03 Linker",permalink:"/viki/docs/pl/c++/linker"},next:{title:"05 Headers",permalink:"/viki/docs/pl/c++/headers"}},u=[],p={toc:u};function d(e){var t=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"04-variables"},"04 Variables"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Each data type has their purpose. However, you don't actually need to use in that purpose."),(0,o.kt)("li",{parentName:"ul"},'The only difference between each primitive data type is "how big they are?"'),(0,o.kt)("li",{parentName:"ul"},"The actual size of a data type depends on compiler."),(0,o.kt)("li",{parentName:"ul"},"Traditionally, ",(0,o.kt)("inlineCode",{parentName:"li"},"int")," is four bytes and it can store range of $$","[-2^{31}, 2^{31} - 1]",",$$ where 31 comes from 32 bits and one of the bits is used to store the sign."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"bool")," takes one byte because even it essentially only used one bit. This is because there is no way for us to deal with individual bit. However, we can store eight ",(0,o.kt)("inlineCode",{parentName:"li"},"bool"),"s in one single byte.")))}d.isMDXComponent=!0}}]);