"use strict";(self.webpackChunkviki=self.webpackChunkviki||[]).push([[955],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return s}});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),d=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=d(e.components);return a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=d(t),s=o,h=m["".concat(l,".").concat(s)]||m[s]||u[s]||r;return t?a.createElement(h,i(i({ref:n},p),{},{components:t})):a.createElement(h,i({ref:n},p))}));function s(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var d=2;d<r;d++)i[d]=t[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1398:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return p},default:function(){return m}});var a=t(7462),o=t(3366),r=(t(7294),t(3905)),i=["components"],c={sidebar_position:1},l="Anaconda",d={unversionedId:"environment/software/anaconda",id:"environment/software/anaconda",title:"Anaconda",description:"Download Anaconda",source:"@site/docs/environment/software/anaconda.md",sourceDirName:"environment/software",slug:"/environment/software/anaconda",permalink:"/viki/docs/environment/software/anaconda",editUrl:"https://github.com/v3ce/viki/edit/docs/docs/environment/index.md/docs/environment/software/anaconda.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"environmentSidebar",previous:{title:"Linux Manjaro",permalink:"/viki/docs/environment/os/manjaro"}},p=[{value:"Download Anaconda",id:"download-anaconda",children:[],level:2},{value:"Init <code>conda</code> because we don&#39;t have this command",id:"init-conda-because-we-dont-have-this-command",children:[],level:2},{value:"Check the PATH with <code>which -a python</code>",id:"check-the-path-with-which--a-python",children:[],level:2},{value:"Update conda",id:"update-conda",children:[],level:2},{value:"Create an environment by yml file",id:"create-an-environment-by-yml-file",children:[],level:2},{value:"Install formatter for jupyter notebook",id:"install-formatter-for-jupyter-notebook",children:[],level:2},{value:"Auto activate base example",id:"auto-activate-base-example",children:[],level:2},{value:"Create environment directly",id:"create-environment-directly",children:[],level:2},{value:"Remove an environment",id:"remove-an-environment",children:[],level:2}],u={toc:p};function m(e){var n=e.components,t=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"anaconda"},"Anaconda"),(0,r.kt)("h2",{id:"download-anaconda"},"Download Anaconda"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For macOS: ",(0,r.kt)("inlineCode",{parentName:"li"},"brew install --cask anaconda")),(0,r.kt)("li",{parentName:"ul"},"For Linux/Windows: Install ",(0,r.kt)("a",{parentName:"li",href:"https://www.anaconda.com/products/individual#Downloads"},"here"),".")),(0,r.kt)("h2",{id:"init-conda-because-we-dont-have-this-command"},"Init ",(0,r.kt)("inlineCode",{parentName:"h2"},"conda")," because we don't have this command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./conda init zsh # The conda configuration is now in ~/.config/zsh/.zshrc\nsource $HOME/.config/zsh/.zshrc\n")),(0,r.kt)("h2",{id:"check-the-path-with-which--a-python"},"Check the PATH with ",(0,r.kt)("inlineCode",{parentName:"h2"},"which -a python")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"In Windows, ",(0,r.kt)("inlineCode",{parentName:"li"},"$HOME/Anaconda3")),(0,r.kt)("li",{parentName:"ul"},"In macOS with Intel chip, ",(0,r.kt)("inlineCode",{parentName:"li"},"/usr/local/anaconda3/bin")),(0,r.kt)("li",{parentName:"ul"},"In macOS with Apple chip, ",(0,r.kt)("inlineCode",{parentName:"li"},"/opt/homebrew/anaconda3/bin")),(0,r.kt)("li",{parentName:"ul"},"In Linux, ",(0,r.kt)("inlineCode",{parentName:"li"},"$HOME/anaconda3/bin"))),(0,r.kt)("h2",{id:"update-conda"},"Update conda"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"conda update conda -y\nconda update --all -y\n")),(0,r.kt)("h2",{id:"create-an-environment-by-yml-file"},"Create an environment by yml file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nvim ~/.config/conda/nyu.yml\n")),(0,r.kt)("p",null,"Paste the following"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml="},"name: NYU\nchannels:\n  - pytorch\n  - conda-forge\ndependencies:\n  # PyTorch + CUDA\n  - pytorch==1.7.1\n  - torchvision==0.8.2\n  - torchaudio==0.7.2\n  - cudatoolkit=11.0\u3000# don't install 11.1, trouble with torchvision.ops.nms\n\n  # Others\n  # - jupyter\n  - opencv\n  - matplotlib\n  - notebook\n  - tqdm\n")),(0,r.kt)("hr",null),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nvim ~/.config/conda/cv.yml\n")),(0,r.kt)("p",null,"Paste the following"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml="},"name: CV\nchannels:\n  - pytorch\n  - conda-forge\ndependencies:\n  # PyTorch + CUDA\n  - pytorch==1.10\n  - torchvision==0.11.1\n  - cudatoolkit=11.3\n\n  # Others\n  # - jupyter\n  - opencv\n  - matplotlib\n  - notebook\n  - tqdm\n")),(0,r.kt)("p",null,"Run"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"conda env create -f ~/.config/conda/cv.yml\n")),(0,r.kt)("h2",{id:"install-formatter-for-jupyter-notebook"},"Install formatter for jupyter notebook"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pip install nb_black\n")),(0,r.kt)("h2",{id:"auto-activate-base-example"},"Auto activate base example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Store config in ~/.condarc\nconda config --set auto_activate_base true\n")),(0,r.kt)("h2",{id:"create-environment-directly"},"Create environment directly"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# e.g.\n# Create an env for Mkdocs deployment\nconda create --name MKDOCS python=3.8\n\n# Activate this environment\nconda activate MKDOCS\n\n# Now work with this cute MKDOCS env!\npip install mkdocs\npip install mkdocs-material\n")),(0,r.kt)("h2",{id:"remove-an-environment"},"Remove an environment"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Remove <ENV NAME>\nconda remove --name <ENV NAME> --all\n\n# Deactivate the current environment\nconda deactivate\n")))}m.isMDXComponent=!0}}]);